#include <cmath>
#include <iostream>
#include <string>
#include "../helper.h"

#include "catch.hpp"
#include "test_config.h"
using namespace std;

TEST_CASE("Python List Conversion Tests", "[PY]") {
  SECTION("Simple String Split") {
    string s  = "asdf,asdf,fdsa,,a";
    auto   vs = split(s, ",");
    REQUIRE(vs.size() == 5);
    REQUIRE(vs[0] == "asdf");
    REQUIRE(vs[3] == "");
  }
  SECTION("Python 1D Double List") {
    string s =
        "[None, None, 0.159531, 0.169297, 0.17867100000000002, "
        "0.23347400000000001, 0.23857100000000003, 0.314012, 0.319145, "
        "0.324144, 0.35329299999999997, 0.35605, 0.40053099999999997, "
        "0.403634, 0.4517670000000001, 0.454637, 0.4573190000000001, "
        "0.4811420000000001, 0.4828640000000001, 0.520123, 0.52165, "
        "0.5620949999999999, 0.563618, 0.565201, 0.57819, 0.57924, "
        "0.5907059999999998, 0.5913589999999999, 0.6040489999999998, "
        "0.6046789999999999, 0.6054659999999998, 0.605466, 0.605466, 0.612516, "
        "0.612923, 0.612923, 0.614366, 0.614675, 0.614675, 0.615616]";
    auto vd = PythonListToDoubleVector(s);
    REQUIRE(vd.size() == 40);
    REQUIRE(abs(vd[0] + 1) < EPSILON);
    REQUIRE(abs(vd[vd.size() - 1] - 0.615616) < EPSILON);
  }
  SECTION("Python 2D Double List") {
    string s =
        "[[7168.0, 7168.0, 154880.0, 154880.0, 154880.0, 450304.0, 450304.0, "
        "1040640.0, 1040640.0, 1040640.0, 2221312.0, 2221312.0, 4581632.0, "
        "4581632.0, 6941952.0, 6941952.0, 6941952.0, 11662592.0, 11662592.0, "
        "21101824.0, 21101824.0, 30541056.0, 30541056.0, 30541056.0, "
        "39980288.0, 39980288.0, 49419520.0, 49419520.0, 58858752.0, "
        "58858752.0, 58858752.0, 58858752.0, 58858752.0, 469916928.0, "
        "469916928.0, 469916928.0, 537042176.0, 537042176.0, 537042176.0, "
        "553430176.0], [None, 0.0, 147712.0, 147712.0, 147712.0, 443136.0, "
        "443136.0, 1033472.0, 1033472.0, 1033472.0, 2214144.0, 2214144.0, "
        "4574464.0, 4574464.0, 6934784.0, 6934784.0, 6934784.0, 11655424.0, "
        "11655424.0, 21094656.0, 21094656.0, 30533888.0, 30533888.0, "
        "30533888.0, 39973120.0, 39973120.0, 49412352.0, 49412352.0, "
        "58851584.0, 58851584.0, 58851584.0, 58851584.0, 58851584.0, "
        "469909760.0, 469909760.0, 469909760.0, 537035008.0, 537035008.0, "
        "537035008.0, 553423008.0], [None, None, 147712.0, 147712.0, 147712.0, "
        "443136.0, 443136.0, 1033472.0, 1033472.0, 1033472.0, 2214144.0, "
        "2214144.0, 4574464.0, 4574464.0, 6934784.0, 6934784.0, 6934784.0, "
        "11655424.0, 11655424.0, 21094656.0, 21094656.0, 30533888.0, "
        "30533888.0, 30533888.0, 39973120.0, 39973120.0, 49412352.0, "
        "49412352.0, 58851584.0, 58851584.0, 58851584.0, 58851584.0, "
        "58851584.0, 469909760.0, 469909760.0, 469909760.0, 537035008.0, "
        "537035008.0, 537035008.0, 553423008.0], [None, None, None, 0.0, 0.0, "
        "295424.0, 295424.0, 885760.0, 885760.0, 885760.0, 2066432.0, "
        "2066432.0, 4426752.0, 4426752.0, 6787072.0, 6787072.0, 6787072.0, "
        "11507712.0, 11507712.0, 20946944.0, 20946944.0, 30386176.0, "
        "30386176.0, 30386176.0, 39825408.0, 39825408.0, 49264640.0, "
        "49264640.0, 58703872.0, 58703872.0, 58703872.0, 58703872.0, "
        "58703872.0, 469762048.0, 469762048.0, 469762048.0, 536887296.0, "
        "536887296.0, 536887296.0, 553275296.0], [None, None, None, None, 0.0, "
        "295424.0, 295424.0, 885760.0, 885760.0, 885760.0, 2066432.0, "
        "2066432.0, 4426752.0, 4426752.0, 6787072.0, 6787072.0, 6787072.0, "
        "11507712.0, 11507712.0, 20946944.0, 20946944.0, 30386176.0, "
        "30386176.0, 30386176.0, 39825408.0, 39825408.0, 49264640.0, "
        "49264640.0, 58703872.0, 58703872.0, 58703872.0, 58703872.0, "
        "58703872.0, 469762048.0, 469762048.0, 469762048.0, 536887296.0, "
        "536887296.0, 536887296.0, 553275296.0], [None, None, None, None, "
        "None, 295424.0, 295424.0, 885760.0, 885760.0, 885760.0, 2066432.0, "
        "2066432.0, 4426752.0, 4426752.0, 6787072.0, 6787072.0, 6787072.0, "
        "11507712.0, 11507712.0, 20946944.0, 20946944.0, 30386176.0, "
        "30386176.0, 30386176.0, 39825408.0, 39825408.0, 49264640.0, "
        "49264640.0, 58703872.0, 58703872.0, 58703872.0, 58703872.0, "
        "58703872.0, 469762048.0, 469762048.0, 469762048.0, 536887296.0, "
        "536887296.0, 536887296.0, 553275296.0], [None, None, None, None, "
        "None, None, 0.0, 590336.0, 590336.0, 590336.0, 1771008.0, 1771008.0, "
        "4131328.0, 4131328.0, 6491648.0, 6491648.0, 6491648.0, 11212288.0, "
        "11212288.0, 20651520.0, 20651520.0, 30090752.0, 30090752.0, "
        "30090752.0, 39529984.0, 39529984.0, 48969216.0, 48969216.0, "
        "58408448.0, 58408448.0, 58408448.0, 58408448.0, 58408448.0, "
        "469466624.0, 469466624.0, 469466624.0, 536591872.0, 536591872.0, "
        "536591872.0, 552979872.0], [None, None, None, None, None, None, None, "
        "590336.0, 590336.0, 590336.0, 1771008.0, 1771008.0, 4131328.0, "
        "4131328.0, 6491648.0, 6491648.0, 6491648.0, 11212288.0, 11212288.0, "
        "20651520.0, 20651520.0, 30090752.0, 30090752.0, 30090752.0, "
        "39529984.0, 39529984.0, 48969216.0, 48969216.0, 58408448.0, "
        "58408448.0, 58408448.0, 58408448.0, 58408448.0, 469466624.0, "
        "469466624.0, 469466624.0, 536591872.0, 536591872.0, 536591872.0, "
        "552979872.0], [None, None, None, None, None, None, None, None, 0.0, "
        "0.0, 1180672.0, 1180672.0, 3540992.0, 3540992.0, 5901312.0, "
        "5901312.0, 5901312.0, 10621952.0, 10621952.0, 20061184.0, 20061184.0, "
        "29500416.0, 29500416.0, 29500416.0, 38939648.0, 38939648.0, "
        "48378880.0, 48378880.0, 57818112.0, 57818112.0, 57818112.0, "
        "57818112.0, 57818112.0, 468876288.0, 468876288.0, 468876288.0, "
        "536001536.0, 536001536.0, 536001536.0, 552389536.0], [None, None, "
        "None, None, None, None, None, None, None, 0.0, 1180672.0, 1180672.0, "
        "3540992.0, 3540992.0, 5901312.0, 5901312.0, 5901312.0, 10621952.0, "
        "10621952.0, 20061184.0, 20061184.0, 29500416.0, 29500416.0, "
        "29500416.0, 38939648.0, 38939648.0, 48378880.0, 48378880.0, "
        "57818112.0, 57818112.0, 57818112.0, 57818112.0, 57818112.0, "
        "468876288.0, 468876288.0, 468876288.0, 536001536.0, 536001536.0, "
        "536001536.0, 552389536.0], [None, None, None, None, None, None, None, "
        "None, None, None, 1180672.0, 1180672.0, 3540992.0, 3540992.0, "
        "5901312.0, 5901312.0, 5901312.0, 10621952.0, 10621952.0, 20061184.0, "
        "20061184.0, 29500416.0, 29500416.0, 29500416.0, 38939648.0, "
        "38939648.0, 48378880.0, 48378880.0, 57818112.0, 57818112.0, "
        "57818112.0, 57818112.0, 57818112.0, 468876288.0, 468876288.0, "
        "468876288.0, 536001536.0, 536001536.0, 536001536.0, 552389536.0], "
        "[None, None, None, None, None, None, None, None, None, None, None, "
        "0.0, 2360320.0, 2360320.0, 4720640.0, 4720640.0, 4720640.0, "
        "9441280.0, 9441280.0, 18880512.0, 18880512.0, 28319744.0, 28319744.0, "
        "28319744.0, 37758976.0, 37758976.0, 47198208.0, 47198208.0, "
        "56637440.0, 56637440.0, 56637440.0, 56637440.0, 56637440.0, "
        "467695616.0, 467695616.0, 467695616.0, 534820864.0, 534820864.0, "
        "534820864.0, 551208864.0], [None, None, None, None, None, None, None, "
        "None, None, None, None, None, 2360320.0, 2360320.0, 4720640.0, "
        "4720640.0, 4720640.0, 9441280.0, 9441280.0, 18880512.0, 18880512.0, "
        "28319744.0, 28319744.0, 28319744.0, 37758976.0, 37758976.0, "
        "47198208.0, 47198208.0, 56637440.0, 56637440.0, 56637440.0, "
        "56637440.0, 56637440.0, 467695616.0, 467695616.0, 467695616.0, "
        "534820864.0, 534820864.0, 534820864.0, 551208864.0], [None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "0.0, 2360320.0, 2360320.0, 2360320.0, 7080960.0, 7080960.0, "
        "16520192.0, 16520192.0, 25959424.0, 25959424.0, 25959424.0, "
        "35398656.0, 35398656.0, 44837888.0, 44837888.0, 54277120.0, "
        "54277120.0, 54277120.0, 54277120.0, 54277120.0, 465335296.0, "
        "465335296.0, 465335296.0, 532460544.0, 532460544.0, 532460544.0, "
        "548848544.0], [None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, 2360320.0, 2360320.0, 2360320.0, "
        "7080960.0, 7080960.0, 16520192.0, 16520192.0, 25959424.0, 25959424.0, "
        "25959424.0, 35398656.0, 35398656.0, 44837888.0, 44837888.0, "
        "54277120.0, 54277120.0, 54277120.0, 54277120.0, 54277120.0, "
        "465335296.0, 465335296.0, 465335296.0, 532460544.0, 532460544.0, "
        "532460544.0, 548848544.0], [None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, 0.0, 0.0, 4720640.0, "
        "4720640.0, 14159872.0, 14159872.0, 23599104.0, 23599104.0, "
        "23599104.0, 33038336.0, 33038336.0, 42477568.0, 42477568.0, "
        "51916800.0, 51916800.0, 51916800.0, 51916800.0, 51916800.0, "
        "462974976.0, 462974976.0, 462974976.0, 530100224.0, 530100224.0, "
        "530100224.0, 546488224.0], [None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, 0.0, 4720640.0, "
        "4720640.0, 14159872.0, 14159872.0, 23599104.0, 23599104.0, "
        "23599104.0, 33038336.0, 33038336.0, 42477568.0, 42477568.0, "
        "51916800.0, 51916800.0, 51916800.0, 51916800.0, 51916800.0, "
        "462974976.0, 462974976.0, 462974976.0, 530100224.0, 530100224.0, "
        "530100224.0, 546488224.0], [None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, "
        "4720640.0, 4720640.0, 14159872.0, 14159872.0, 23599104.0, 23599104.0, "
        "23599104.0, 33038336.0, 33038336.0, 42477568.0, 42477568.0, "
        "51916800.0, 51916800.0, 51916800.0, 51916800.0, 51916800.0, "
        "462974976.0, 462974976.0, 462974976.0, 530100224.0, 530100224.0, "
        "530100224.0, 546488224.0], [None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "0.0, 9439232.0, 9439232.0, 18878464.0, 18878464.0, 18878464.0, "
        "28317696.0, 28317696.0, 37756928.0, 37756928.0, 47196160.0, "
        "47196160.0, 47196160.0, 47196160.0, 47196160.0, 458254336.0, "
        "458254336.0, 458254336.0, 525379584.0, 525379584.0, 525379584.0, "
        "541767584.0], [None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, "
        "9439232.0, 9439232.0, 18878464.0, 18878464.0, 18878464.0, 28317696.0, "
        "28317696.0, 37756928.0, 37756928.0, 47196160.0, 47196160.0, "
        "47196160.0, 47196160.0, 47196160.0, 458254336.0, 458254336.0, "
        "458254336.0, 525379584.0, 525379584.0, 525379584.0, 541767584.0], "
        "[None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, 0.0, 9439232.0, "
        "9439232.0, 9439232.0, 18878464.0, 18878464.0, 28317696.0, 28317696.0, "
        "37756928.0, 37756928.0, 37756928.0, 37756928.0, 37756928.0, "
        "448815104.0, 448815104.0, 448815104.0, 515940352.0, 515940352.0, "
        "515940352.0, 532328352.0], [None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, 9439232.0, 9439232.0, 9439232.0, 18878464.0, "
        "18878464.0, 28317696.0, 28317696.0, 37756928.0, 37756928.0, "
        "37756928.0, 37756928.0, 37756928.0, 448815104.0, 448815104.0, "
        "448815104.0, 515940352.0, 515940352.0, 515940352.0, 532328352.0], "
        "[None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "0.0, 0.0, 9439232.0, 9439232.0, 18878464.0, 18878464.0, 28317696.0, "
        "28317696.0, 28317696.0, 28317696.0, 28317696.0, 439375872.0, "
        "439375872.0, 439375872.0, 506501120.0, 506501120.0, 506501120.0, "
        "522889120.0], [None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, 0.0, 9439232.0, 9439232.0, 18878464.0, 18878464.0, "
        "28317696.0, 28317696.0, 28317696.0, 28317696.0, 28317696.0, "
        "439375872.0, 439375872.0, 439375872.0, 506501120.0, 506501120.0, "
        "506501120.0, 522889120.0], [None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, 9439232.0, 9439232.0, 18878464.0, "
        "18878464.0, 28317696.0, 28317696.0, 28317696.0, 28317696.0, "
        "28317696.0, 439375872.0, 439375872.0, 439375872.0, 506501120.0, "
        "506501120.0, 506501120.0, 522889120.0], [None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, 0.0, "
        "9439232.0, 9439232.0, 18878464.0, 18878464.0, 18878464.0, 18878464.0, "
        "18878464.0, 429936640.0, 429936640.0, 429936640.0, 497061888.0, "
        "497061888.0, 497061888.0, 513449888.0], [None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "9439232.0, 9439232.0, 18878464.0, 18878464.0, 18878464.0, 18878464.0, "
        "18878464.0, 429936640.0, 429936640.0, 429936640.0, 497061888.0, "
        "497061888.0, 497061888.0, 513449888.0], [None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, 0.0, 9439232.0, 9439232.0, 9439232.0, 9439232.0, 9439232.0, "
        "420497408.0, 420497408.0, 420497408.0, 487622656.0, 487622656.0, "
        "487622656.0, 504010656.0], [None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, "
        "9439232.0, 9439232.0, 9439232.0, 9439232.0, 9439232.0, 420497408.0, "
        "420497408.0, 420497408.0, 487622656.0, 487622656.0, 487622656.0, "
        "504010656.0], [None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, 0.0, 0.0, 0.0, "
        "0.0, 411058176.0, 411058176.0, 411058176.0, 478183424.0, 478183424.0, "
        "478183424.0, 494571424.0], [None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, 0.0, 0.0, 0.0, 411058176.0, 411058176.0, 411058176.0, "
        "478183424.0, 478183424.0, 478183424.0, 494571424.0], [None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, 0.0, 0.0, 411058176.0, "
        "411058176.0, 411058176.0, 478183424.0, 478183424.0, 478183424.0, "
        "494571424.0], [None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, 0.0, 411058176.0, 411058176.0, 411058176.0, 478183424.0, "
        "478183424.0, 478183424.0, 494571424.0], [None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, 411058176.0, 411058176.0, "
        "411058176.0, 478183424.0, 478183424.0, 478183424.0, 494571424.0], "
        "[None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, 0.0, 0.0, 67125248.0, 67125248.0, 67125248.0, 83513248.0], "
        "[None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, 0.0, 67125248.0, 67125248.0, 67125248.0, 83513248.0], "
        "[None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, 67125248.0, 67125248.0, 67125248.0, 83513248.0], "
        "[None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, 0.0, 0.0, 16388000.0], [None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, 0.0, 16388000.0], [None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "16388000.0], [None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None, None, None, "
        "None, None, None, None, None, None, None, None, None]]";
    auto vvd = Python2DListToDouble2DVector(s);
    REQUIRE(vvd.size() == 41);
    REQUIRE(abs(vvd[0][0] - 7168.0) < EPSILON);  // First element is 7168
    REQUIRE(abs(vvd[vvd.size() - 1][vvd[vvd.size() - 1].size() - 1] + 1) <
            EPSILON);  // Last element is -1
  }
  SECTION("Python 1D Int List") {
    string s =
        "[32, 26, 7, 21, 2, 16, 1, 9, 31, 11, 27, 22, 3, 17, 12, 28, 23, 8, 4, "
        "18, 13, 29, 15, 24, 5, 19, 14, 30, 25, 6, 20, 0, 10]";
    auto vi = PythonListToIntVector(s);
    REQUIRE(vi.size() == 33);
    REQUIRE(vi[0] == 32);
    REQUIRE(vi[vi.size() - 1] == 10);
  }
  SECTION("Python 2D Int List") {
    string s =
        "[[], [0], [1, 0], [1, 2, 0], [1, 3, 2, 0], [1, 3, 2, 0, 4], [1, 4, 5, "
        "3, 0, 2], [1, 5, 3, 4, 0, 2, 6], [3, 7, 2, 6, 1, 5, 0, 4], [3, 4, 7, "
        "2, 6, 1, 5, 0, 8], [3, 7, 8, 2, 6, 1, 9, 5, 0, 4], [3, 4, 7, 2, 6, 1, "
        "9, 5, 0, 10, 8], [3, 7, 8, 2, 6, 1, 9, 5, 0, 10, 11, 4], [3, 4, 7, 2, "
        "6, 11, 12, 1, 9, 5, 0, 10, 8], [3, 13, 7, 8, 2, 6, 12, 1, 9, 5, 0, "
        "10, 11, 4], [14, 3, 4, 13, 7, 2, 6, 11, 12, 1, 9, 5, 0, 10, 8], [13, "
        "7, 2, 1, 9, 5, 10, 11, 14, 3, 8, 6, 12, 0, 15, 4], [4, 13, 7, 2, 16, "
        "1, 15, 9, 5, 11, 14, 3, 6, 12, 0, 10, 8], [13, 7, 2, 16, 1, 9, 5, 10, "
        "11, 14, 3, 17, 8, 6, 12, 0, 15, 4], [18, 4, 13, 7, 2, 16, 1, 15, 9, "
        "5, 11, 14, 3, 17, 6, 12, 0, 10, 8], [18, 13, 7, 2, 16, 1, 9, 5, 10, "
        "19, 11, 14, 3, 17, 8, 6, 12, 0, 15, 4], [18, 4, 13, 7, 2, 16, 1, 15, "
        "9, 5, 19, 11, 14, 3, 17, 6, 20, 12, 0, 10, 8], [18, 13, 7, 21, 2, 16, "
        "1, 9, 5, 10, 19, 11, 14, 3, 17, 8, 6, 20, 12, 0, 15, 4], [18, 4, 13, "
        "7, 21, 2, 16, 1, 15, 9, 5, 19, 11, 14, 22, 3, 17, 6, 20, 12, 0, 10, "
        "8], [18, 4, 13, 7, 21, 2, 16, 1, 9, 5, 10, 19, 11, 14, 22, 3, 17, 8, "
        "6, 20, 12, 0, 15, 23], [18, 13, 7, 21, 2, 16, 1, 15, 23, 24, 9, 5, "
        "19, 11, 14, 22, 3, 17, 8, 6, 20, 12, 0, 10, 4], [18, 4, 13, 7, 21, 2, "
        "16, 1, 24, 9, 5, 10, 19, 11, 14, 22, 3, 17, 8, 25, 6, 20, 12, 0, 15, "
        "23], [18, 26, 13, 7, 21, 2, 16, 1, 15, 23, 24, 9, 5, 19, 11, 14, 22, "
        "3, 17, 8, 25, 6, 20, 12, 0, 10, 4], [18, 26, 4, 13, 7, 21, 2, 16, 1, "
        "24, 9, 5, 10, 19, 11, 27, 14, 22, 3, 17, 8, 25, 6, 20, 12, 0, 15, "
        "23], [18, 26, 13, 7, 21, 2, 16, 1, 15, 23, 24, 9, 5, 19, 11, 27, 14, "
        "22, 3, 17, 8, 25, 6, 20, 12, 28, 0, 10, 4], [18, 26, 4, 13, 7, 29, "
        "21, 2, 16, 1, 24, 9, 5, 10, 19, 11, 27, 14, 22, 3, 17, 8, 25, 6, 20, "
        "12, 28, 0, 15, 23], [18, 26, 13, 7, 29, 21, 2, 16, 1, 15, 23, 24, 9, "
        "5, 19, 11, 27, 14, 30, 22, 3, 17, 8, 25, 6, 20, 12, 28, 0, 10, 4], "
        "[26, 7, 21, 2, 16, 1, 9, 31, 10, 11, 27, 22, 3, 17, 12, 28, 23, 8, 4, "
        "18, 13, 29, 24, 5, 19, 14, 30, 25, 6, 20, 0, 15], [32, 26, 7, 21, 2, "
        "16, 1, 9, 31, 11, 27, 22, 3, 17, 12, 28, 23, 8, 4, 18, 13, 29, 15, "
        "24, 5, 19, 14, 30, 25, 6, 20, 0, 10], [32, 26, 7, 21, 2, 16, 1, 9, "
        "31, 10, 11, 27, 22, 3, 17, 33, 12, 28, 23, 8, 4, 18, 13, 29, 24, 5, "
        "19, 14, 30, 25, 6, 20, 0, 15], [32, 26, 7, 21, 2, 16, 1, 9, 31, 11, "
        "27, 22, 3, 17, 33, 12, 28, 23, 8, 4, 18, 34, 13, 29, 15, 24, 5, 19, "
        "14, 30, 25, 6, 20, 0, 10], [32, 26, 7, 21, 2, 16, 1, 9, 31, 10, 11, "
        "27, 22, 3, 17, 33, 12, 28, 23, 8, 4, 18, 34, 13, 29, 24, 5, 19, 35, "
        "14, 30, 25, 6, 20, 0, 15], [32, 26, 7, 21, 2, 16, 1, 9, 31, 10, 11, "
        "27, 22, 3, 17, 33, 12, 28, 23, 8, 4, 18, 34, 13, 29, 15, 24, 5, 19, "
        "35, 14, 30, 25, 6, 20, 0, 36], [32, 26, 7, 21, 2, 37, 16, 1, 36, 9, "
        "31, 11, 27, 22, 3, 17, 33, 12, 28, 23, 8, 4, 18, 34, 13, 29, 15, 24, "
        "5, 19, 35, 14, 30, 25, 6, 20, 0, 10], [32, 26, 7, 21, 2, 37, 16, 1, "
        "9, 31, 10, 11, 27, 22, 3, 38, 17, 33, 12, 28, 23, 8, 4, 18, 34, 13, "
        "29, 15, 24, 5, 19, 35, 14, 30, 25, 6, 20, 0, 36]]";
    auto vvi = Python2DListToInt2DVector(s);
    cout << vvi.size() << endl;
    //    everMsg(vvi[0][0]);
    //    everMsg(vvi[1][0]);
    REQUIRE(vvi[0].size() == 0);
  }
}
