#+TITLE: HPGO README
#+DESCRIPTION: 
#+AUTHOR: LER0ever <hi@rongyi.io>

* HPGO
  Hybrid Parallelism Global Orchestration
  
#+BEGIN_SRC text
THIS VERSION DOES NOT BUILD YET!!!
#+END_SRC

** Algorithm
   [[file:docs/report/HPGO.org][HPGO Algorithm Description]]
   
** Build
   
*** Prerequisites

    - a C++17 compiler (GCC >= 7, Clang >= 5, MSVC >= 2017)
    - CMake > 2.8
    - Boost::System (tested on 1.71)
    - Boost::Python
    - Python-Dev (3)
    - GraphViz
    - Google Tests (bundled)

*** Compile

    #+BEGIN_SRC bash
    mkdir build
    cd build
    cmake ..
    make -j
    #+END_SRC

*** Test

    #+BEGIN_SRC bash
    # run all the unit tests
    ./HPGO-test
    #+END_SRC

** Project Structure

*** Unit Testing
    Unit tests for HPGO can be found under the folder ~./tests/~.

*** Style Guide
    This project uses Clang-Format, the configuration of which can be found in [[./.clang-format][./.clang-format]]. 
    
*** Folder Structure
    Output of command ~tree -L 3 -d -I "__pycache__|build|cmake-build-debug|auto"~
    
#+BEGIN_SRC text
├── HPGO
│   ├── environment
│   ├── input
│   ├── model
│   ├── orchestration
│   ├── parallelism
│   │   ├── data-parallel
│   │   ├── pipeline
│   │   └── split-concat
│   ├── source
│   └── utils
├── cmake
├── cmd
├── codegeneration
├── contrib
├── deploy
│   ├── packages
│   └── ubuntu-ppa
│       └── debian
├── docs
│   ├── api-docs
│   ├── images
│   ├── manual
│   │   └── HPGO.prv
│   ├── presentation
│   │   └── dist
│   └── report
├── graph
│   └── test_graphs
├── optimizer
│   ├── gnmt_partitioned
│   ├── scripts
│   ├── templates
│   └── vgg16_partitioned
├── profiler
│   ├── image_classification
│   │   ├── models
│   │   ├── profiles
│   │   ├── sparsity
│   │   └── utils
│   ├── torchmodules
│   │   ├── torchgraph
│   │   ├── torchlogger
│   │   ├── torchprofiler
│   │   └── torchsummary
│   └── translation
│       ├── profiles
│       └── seq2seq
├── tests
│   ├── HPGO-test
│   └── googletest
│       ├── ci
│       ├── googlemock
│       └── googletest
└── utils
#+END_SRC
** License

   All Python code in this project comes from PipeDream, a Microsoft Research project, open source under MIT License.
